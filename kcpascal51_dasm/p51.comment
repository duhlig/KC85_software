ChkType:
  Parameter:
    BC: ermittelter Typ
    DE: geforderter Typ
  Return:
    Z-Flag: 1=OK
    (im Fehlerfall JP CompileErr)
    
IsNum:
  Return:
    C-Flag: 1=True

GetFactor:
  Return:
    BC: gefundener Typ
    
GetFloat:
  Return:
    HL: Zahlenwert
    A: tatsaechlicher Exponent
    E: ?Anzahl Nachkommastellen?

GetLexem:
  Return:
    A:
      000h: Bezeichner
      001h: PROGRAM
      002h: DIV
      003h: CONST
      004h: PROCEDURE
      005h: FUNCTION
      006h: NOT
      007h: OR
      008h: AND
      009h: MOD
      00ah: VAR
      00bh: OF
      00ch: TO
      00dh: DOWNTO
      00eh: THEN
      00fh: UNTIL
      010h: END
      011h: DO
      012h: ELSE
      013h: REPEAT
      014h: CASE
      015h: WHILE
      016h: FOR
      017h: IF
      018h: BEGIN
      019h: WITH
      01ah: GOTO
      01bh: SET
      01ch: ARRAY
      01dh: FORWARD
      013h: RECORD
      01fh: TYPE
      020h: IN
      021h: LABEL
      022h: NIL
      023h: PACKED
      075h: string literal?
      076h: chr?
      078h: "="
      07dh: ":="
      07eh: unsigned number
      07fh: pos. Integer
      0a8h: "("
      0a9h: ")"
      0abh: "+"
      0ach: ","
      0adh: "-"
      0aeh: "." oder Quelltextende
      0bbh: ";"
      0dbh: "["
      0ddh: "]"

SearchInSymTab__:
  Parameter:
    HL: erstes Listenelement
  Return:
    C-Flag=1: gefunden
    HL: wenn gefunden, dann Adr. hinter dem gefundenen Namen
    
Save:
  Parameter:
    HL: Anfangsadresse
    BC: Länge
    
GotoSrcLineBC:
  Parameter:
    BC: gesuchte Zeilennummer
  Return:
    HL: Adr. der gesu. oder nächsthöheren Zl.
    Flags:
      C=1: gesu. Zeilennummer > letzte Zeile, d.h. nicht gefunden
      Z=1: Zeilennummer gefunden
      Z=0 und C=0: gesu. ZlNr liegt zwischen 2 Zeilen

WCode_VarIdxTOS:
  Parameter:
    BC: Basisadr., Werte: 35da (2x), 35e6, 35f2, 35fe, 360a
    TOS: Abstand zur Basisadr.
      - bei BC=35da: TOS zw. 00EE und 00F8 --> Adr. zw. 36c8 und 36d2
      - bei BC=35e6: TOS zw. 00EE und 00F8 --> Adr. zw. 36d4 und 36de
      - bei BC=35f2: TOS zw. 00EE und 00F8 --> Adr. zw. 36e0 und 36ea
      - bei BC=35fe: TOS zw. 00EE und 00F8 --> Adr. zw. 36ec und 36f6
      - bei BC=360a: TOS zw. 00EE und 00F8 --> Adr. zw. 36f8 und 3702

l3754h:
  - "ld de,0371eh", dann "add hl.de"
    hl zw. 26h und 34h --> Adr. zw. 3744 und 3752


IX:
  +0:
    bit_0: Comp-Opt. L, + -> 1, - -> 0
    bit_1: Comp-Opt. O
    bit_2: Comp-Opt. C
    bit_3: Comp-Opt. S
    bit_4: Comp-Opt. I
    bit_5: Comp-Opt. A
    bit_6: EOL im Line Buffer gelesen
  +2:
    bit_1: bewirkt return(0aeh) in GetLexem --> Quelltextende?
    bit_3:?


---
offen:
0b7..h

