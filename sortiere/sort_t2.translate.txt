3AD8   20 (*2023-02-12, v0.10, glob. Def.*)
3AD8   30 (*$C-*)
3AD8   40 (*$O+*)
3AD8   50 (*$S+*)
3AD8   60 (*$A+*)
3AD8   70 (*$I+*)
3AD8   80 PROGRAM SORTDEMO;
3AD8   90 CONST
3AD8  100  AGR=250; (*max. Groesse von a*)
3AD8  110  FGR=253;
3AD8  120  YOFS=4; (*Grafik-Offset Y*)
3AD8  130  LEER='        ';
3AE3  140  SPGR=15; (*Groesse von spur*)
3AE3  150  UGR=30; (*Groe.d.Auswert-Felds*)
3AE3  160 TYPE
3AE3  170  tStart=(AUF,AB,ZUFALL,AUF1A,AUF1E,AUF3A,AUF3E);
3AE3  180  (*tZust=(ZENDE,ZWSTA,ZWALG,ZWAGR,ZWDOP,ZSTA);*)
3AE3  190  tAlgo=(SEL,INS,BUB,SHE,QUI,QUM,QMI,HEA);
3AE3  200  tStr6=ARRAY[1..6] OF CHAR;
3AE3  210  tAusw=RECORD
3AE3  220   alg:tAlgo; sta:tStart;
3AE3  230   gr,dp,vg,zw:INTEGER
3AE3  240  END;
3AE3  250 VAR
3AF2  260  a: ARRAY[0..FGR] OF INTEGER;
3AF2  270  agr:INTEGER; (*aktuelle Gr.v.a*)
3AF2  280  xOfs,yOfs:INTEGER;(*Grafikoffset*)
3AF2  290  i,j,altI1,altI2,altDY: INTEGER;
3AF2  300  iTmp:INTEGER; (*Ausweichplatz rechts neben agr*)
3AF2  310  sk1,sk2,sk8:BOOLEAN;(*Skalierung*)
3AF2  320  pSk:INTEGER;(*Pixelskal.f.SHL*)
3AF2  330  tSym:CHAR;(*Symbol b.Textpix.*)
3AF2  340  spur: ARRAY[0..SPGR] OF INTEGER;
3AF2  350  zuw,vgl,dop:INTEGER;
3AF2  360  zu1,zu2:CHAR;
3AF2  370  tast:CHAR; (*Taste, Hilfsvar.*)
3AF2  380  aSta:tStart;
3AF2  390  algo:tAlgo;
3AF2  400  prx,pry:INTEGER; (*alte Pos. d. Prompts*)
3AF2  410  schritt,w:BOOLEAN;
3AF2  420  st:ARRAY[0..15] OF INTEGER;
3AF2  430  sp:INTEGER;
3AF2  440  ausw:ARRAY[1..UGR] OF tAusw;
3AF2  450  ui:ARRAY[0..UGR] OF INTEGER;
3AF2  460  ugr,uein:INTEGER; (*ugr=Fuellg.*)
3AF2  470   (*von ausw; uein=Einfuege-Idx.*)
3AF2  480  usp:INTEGER;(*Sort-spal.i.Ausw*)
3AF2  490  ur:INTEGER;(*Sort-richtg.i." *)
3AF2  500 (* Ende d. glob. Def. *)
3AF2  510 
3AF2  520 
3AF2  530 (* 2023-04-23, V0.11, Teil 2 *)
3AF2  540 
3AF2  550 PROCEDURE PSet4(x,y:INTEGER);
3AF5  560 BEGIN
3B0A  570  INLINE(#DD,#6E,#04,#DD,#66);
3B0F  580  INLINE(#05,#DD,#5E,#02,#DD);
3B14  590  INLINE(#E5,#DB,#88,#F6,#24);
3B19  600  INLINE(#D3,#88,#22,#D3,#B7);
3B1E  610  INLINE(#7B,#32,#D5,#B7,#3A);
3B23  620  INLINE(#A3,#B7,#E6,#F8,#32);
3B28  630  INLINE(#D6,#B7,#DD,#2A,#B0);
3B2D  640  INLINE(#06,#ED,#73,#B2,#06);
3B32  650  INLINE(#ED,#7B,#06,#07,#FB);
3B37  660  INLINE(#CD,#03,#F0,#30,#21);
3B3C  670  INLINE(#D3,#B7,#34,#CD,#03);
3B41  680  INLINE(#F0,#30,#21,#D5,#B7);
3B46  690  INLINE(#34,#CD,#03,#F0,#30);
3B4B  700  INLINE(#21,#D3,#B7,#35,#CD);
3B50  710  INLINE(#03,#F0,#30,#F3,#ED);
3B55  720  INLINE(#73,#06,#07,#DB,#88);
3B5A  730  INLINE(#E6,#DB,#D3,#88,#ED);
3B5F  740  INLINE(#7B,#B2,#06,#DD,#E1);
3B64  750 END;
3B6E  760 
3B6E  770 PROCEDURE PLoe4(x,y:INTEGER);
3B71  780 BEGIN
3B86  790  INLINE(#DD,#6E,#04,#DD,#66);
3B8B  800  INLINE(#05,#DD,#5E,#02,#DD);
3B90  810  INLINE(#E5,#DB,#88,#F6,#24);
3B95  820  INLINE(#D3,#88,#22,#D3,#B7);
3B9A  830  INLINE(#7B,#32,#D5,#B7(*,#3A*));
3B9E  840 (* INLINE(#A3,#B7,#E6,#F8,#32);*)
3B9E  850  INLINE((*#D6,#B7,*)#DD,#2A,#B0);
3BA1  860  INLINE(#06,#ED,#73,#B2,#06);
3BA6  870  INLINE(#ED,#7B,#06,#07,#FB);
3BAB  880  INLINE(#CD,#03,#F0,#2F,#21);
3BB0  890  INLINE(#D3,#B7,#34,#CD,#03);
3BB5  900  INLINE(#F0,#2F,#21,#D5,#B7);
3BBA  910  INLINE(#34,#CD,#03,#F0,#2F);
3BBF  920  INLINE(#21,#D3,#B7,#35,#CD);
3BC4  930  INLINE(#03,#F0,#2F,#F3,#ED);
3BC9  940  INLINE(#73,#06,#07,#DB,#88);
3BCE  950  INLINE(#E6,#DB,#D3,#88,#ED);
3BD3  960  INLINE(#7B,#B2,#06,#DD,#E1);
3BD8  970 END;
3BE2  980 
3BE2  990 PROCEDURE Modus(p,q:BOOLEAN);(*Dummy*)
3BE5 1000 CONST L='<A:1.3>';
3BEF 1010 BEGIN
3C04 1020 END;
3C0B 1030 
3C0B 1040 PROCEDURE StartKnopf(p:tStr6);(*Dummy*)
3C0E 1050 CONST L='<A:1.1>';
3C18 1060 BEGIN
3C2D 1070 END;
3C37 1080 
3C37 1090 PROCEDURE Tasten(p:tStr6);(*Dummy*)
3C3A 1100 CONST L='<A:1.2>';
3C44 1110 BEGIN
3C59 1120 END;
3C63 1130 
3C63 1140 PROCEDURE PSetS(xx,yy:INTEGER);
3C66 1150 CONST L='<E:2.2>';
3C70 1160 BEGIN
3C85 1170  IF sk1 THEN
3C8C 1180   PLOT(xOfs+xx,yy)
3CA5 1190  ELSE IF sk2 THEN
3CB8 1200   PSet4(xOfs-1+xx+xx,yy)
3CE0 1210  ELSE
3CEC 1220  BEGIN
3CEC 1230   GOTOXY(xOfs+xx,32-yy);
3D1A 1240   WRITE(tSym);
3D20 1250  END;
3D20 1260 END;
3D2A 1270 
3D2A 1280 PROCEDURE PLoeS(xx,yy:INTEGER);
3D2D 1290 BEGIN
3D42 1300  IF sk1 THEN
3D49 1310   CLRPLOT(xOfs+xx,yy)
3D62 1320  ELSE IF sk2 THEN
3D75 1330   PLoe4(xOfs-1+xx+xx,yy)
3D9D 1340  ELSE
3DA9 1350  BEGIN
3DA9 1360   GOTOXY(xOfs+xx,32-yy);
3DD7 1370   WRITE(' ');
3DDC 1380  END;
3DDC 1390 END;
3DE6 1400 
3DE6 1410 PROCEDURE GotoZInf;
3DE9 1420 BEGIN
3DFE 1430  SETC(7,0);GOTOXY(33,27);
3E20 1440 END;
3E26 1450 
3E26 1460 PROCEDURE WrDezU6(z:INTEGER);
3E29 1470 CONST L='<E:2.3>';
3E33 1480 VAR zt:INTEGER;
3E33 1490 BEGIN
3E48 1500  IF z>0 THEN
3E5A 1510   WRITE(z:6)
3E69 1520  ELSE BEGIN
3E6C 1530   WRITE(' ');
3E71 1540   zt:=0;
3E7A 1550 (*$O-*) (*Zahlenueberlauf wird ausgenutzt!*)
3E7A 1560   WHILE z<0 DO BEGIN
3E8D 1570    z:=z-10000; zt:=zt+1;
3EAA 1580   END;
3EAD 1590 (*$O+*)
3EAD 1600   WHILE z>=10000 DO BEGIN
3EC0 1610    z:=z-10000; zt:=zt+1;
3EE2 1620   END;
3EE5 1630   IF zt>0 THEN BEGIN
3EF7 1640    WRITE(zt:1);
3F06 1650    IF z<1000 THEN WRITE(0:1);
3F25 1660    IF z< 100 THEN WRITE(0:1);
3F44 1670    IF z<  10 THEN WRITE(0:1);
3F63 1680   END;
3F63 1690   WRITELN(z:1);
3F75 1700  END;
3F75 1710 END;
3F7D 1720  
3F7D 1730 PROCEDURE Zv;
3F80 1740 BEGIN
3F95 1750  SETC(6,0); GOTOXY(33,21);
3FB7 1760  WrDezU6(vgl);
3FC4 1770 END;
3FCA 1780 
3FCA 1790 PROCEDURE Zz;
3FCD 1800 BEGIN
3FE2 1810  SETC(2,0); GOTOXY(33,24);
4004 1820  WrDezU6(zuw);
4011 1830 END;
4017 1840 
4017 1850 PROCEDURE Weiter;
401A 1860 VAR t:CHAR;
401A 1870 BEGIN
402F 1880  IF schritt OR KEYPRESSED THEN
4041 1890   t:=READKBD;
4047 1900  CASE t OF
404A 1910   'Q': BEGIN
404F 1920         w:=FALSE;
4053 1930         SETC(7,0);GOTOXY(2,0);
4075 1940         WRITE('(abgebrochen)');
408D 1950        END;
4090 1960   'L': IF schritt THEN
409C 1970         Modus(FALSE,FALSE);
40AE 1980   'S': IF NOT schritt THEN
40BC 1990         Modus(FALSE,TRUE)
40C3 2000  END;
40CC 2010 END;
40D3 2020 
40D3 2030 PROCEDURE Markiere
40D6 2040  (i1,i2,farbe,dy:INTEGER);
40D6 2050 VAR h:INTEGER;
40D6 2060 BEGIN
40EB 2070  SETC(farbe,6);
40FF 2080  PLoeS(altI1,altDY);
4110 2090  PLoeS(altI2,altDY);
4121 2100  altI1:=i1; altI2:=i2;
4133 2110  IF sk8 THEN BEGIN
413A 2120   IF i1>i2 THEN BEGIN
414F 2130    h:=i1;i1:=i2;i2:=h; END;
4173 2140   SETC(farbe,6);
4187 2150   IF dy=-2 THEN tSym:=CHR(137)
41A3 2160            ELSE tSym:=CHR(139);
41B0 2170   PSetS(i1,altDY);
41C4 2180   IF dy=-2 THEN tSym:=CHR(136);
41E3 2190   PSetS(i2,altDY);
41F7 2200   altDY:=yOfs-1;tSym:=' ';
4203 2210  END
4203 2220  ELSE BEGIN
4206 2230   IF sk1 THEN altDY:=yOfs+dy
4211 2240          ELSE altDY:=yOfs+dy+dy;
4246 2250   PSetS(i1,altDY);
425A 2260   PSetS(i2,altDY);
426E 2270  END;
426E 2280 END;
4279 2290 
4279 2300 FUNCTION Ga
427C 2310  (i1,i2:INTEGER):BOOLEAN;
427C 2320 BEGIN
4291 2330  Markiere(i1,i2,6,-3);
42B3 2340  vgl:=vgl+1; Zv;
42C3 2350  Ga:=a[i1]>a[i2];
430B 2360  Weiter;
4314 2370 END;
431E 2380 
431E 2390 PROCEDURE Tausche(i1,i2:INTEGER);
4321 2400 VAR h:INTEGER;
4321 2410 BEGIN
4336 2420  Markiere(i1,i2,2,-2);
4358 2430  SETC(7,0);
4369 2440  PLoeS(i1,a[i1]);
439A 2450  PLoeS(i2,a[i2]);
43CB 2460  h:=a[i1];a[i1]:=a[i2];a[i2]:=h;
445B 2470  SETC(7,7);
446C 2480  PSetS(i1,a[i1]);
449D 2490  PSetS(i2,a[i2]);
44CE 2500  zuw:=zuw+3; Zz;
44E0 2510  Weiter;
44E9 2520 END;
44F4 2530 
44F4 2540 PROCEDURE LegeSpur(ii:INTEGER);
44F7 2550 VAR x1,x2,s,k: INTEGER;
44F7 2560 BEGIN
450C 2570  IF spur[0]<>ii THEN
453B 2580  BEGIN
453B 2590   FOR k:=1 TO SPGR DO
455E 2600    spur[k]:=0;
4586 2610   x1:=ii; x2:=agr; s:=1; k:=0;
45AD 2620   IF ii=agr THEN x2:=0;
45CB 2630   REPEAT
45CB 2640    spur[k]:=x1;spur[SPGR-k]:=x2;
4627 2650    x1:=x1+s; x2:=x2-s;
465C 2660    k:=k+1; s:=s+s;
4683 2670   UNTIL x1>=x2;
4699 2680   IF x1=x2 THEN
46B1 2690    spur[k]:=x1
46CE 2700   ELSE
46DC 2710    IF x1-x2<SHR(s,2) THEN
4711 2720     spur[k]:=x1;
4739 2730  END;
4739 2740 END;
4745 2750 
4745 2760 PROCEDURE InTmp(ii:INTEGER);
4748 2770 VAR y,k,s:INTEGER;
4748 2780 BEGIN
475D 2790  Markiere(ii,iTmp,2,-2);
477C 2800  y:=a[ii];
47A2 2810  LegeSpur(ii);
47B2 2820  SETC(7,7);
47C3 2830  FOR k:=0 TO SPGR DO
47E6 2840  BEGIN
47E6 2850   s:=spur[k];
480C 2860   IF (s<>0) AND (a[s]<>y) THEN
4852 2870    PSetS(s,y);
4869 2880  END;
486C 2890  SETC(2,7); tSym:=CHR(142);
4884 2900  PSetS(iTmp,y);
4898 2910  SETC(2,0); tSym:=' ';
48AE 2920  PLoeS(spur[0],y);
48DC 2930  FOR k:=1 TO SPGR DO
48FF 2940  BEGIN
48FF 2950   s:=spur[k];
4925 2960   IF (s<>0) AND (a[s]<>y) THEN
496B 2970    PLoeS(s,y);
4982 2980  END;
4985 2990  a[iTmp]:=y;
49AA 3000  zuw:=zuw+1; Zz;
49BA 3010  Weiter;
49C3 3020 END;
49CF 3030 
49CF 3040 PROCEDURE AusTmp(ii:INTEGER);
49D2 3050 VAR y,k,s:INTEGER;
49D2 3060 BEGIN
49E7 3070  Markiere(ii,iTmp,2,-2);
4A06 3080  y:=a[iTmp];
4A29 3090  LegeSpur(ii);
4A39 3100  SETC(7,7);
4A4A 3110  FOR k:=SPGR DOWNTO 1 DO
4A6C 3120  BEGIN
4A6C 3130   s:=spur[k];
4A92 3140   IF (s<>0) AND (a[s]<>y) THEN
4AD8 3150    PSetS(s,y);
4AEF 3160  END;
4AF2 3170  PSetS(ii,y);
4B09 3180  SETC(7,6);PLoeS(iTmp,y);
4B2E 3190  SETC(7,0);
4B3F 3200  FOR k:=SPGR DOWNTO 1 DO
4B61 3210  BEGIN
4B61 3220   s:=spur[k];
4B87 3230   IF (s<>0) AND (a[s]<>y) THEN
4BCD 3240    PLoeS(s,y);
4BE4 3250  END;
4BE7 3260  a[ii]:=y;
4C0F 3270  zuw:=zuw+1; Zz;
4C1F 3280  Weiter;
4C28 3290 END;
4C34 3300 
4C34 3310 PROCEDURE Schiebe1(i1,i2:INTEGER);
4C37 3320 BEGIN
4C4C 3330  Markiere(i1,i2,2,-2);
4C6E 3340  SETC(7,0);
4C7F 3350  PLoeS(i2,a[i2]);
4CB0 3360  a[i1]:=a[i2];
4CF2 3370  SETC(7,7);
4D03 3380  PSetS(i1,a[i1]);
4D34 3390  zuw:=zuw+1; Zz;
4D44 3400  Weiter;
4D4D 3410 END;
4D57 3420 
4D57 3430 
4D57 3440 PROCEDURE Quick(m,n:INTEGER);
4D5A 3450 VAR l,r,t,tt,u,v:INTEGER;
4D5A 3460     w1,w2:BOOLEAN;
4D5A 3470 
4D5A 3480 PROCEDURE SIn;
4D5D 3490 BEGIN
4D72 3500  sp:=0;
4D78 3510 END;
4D7E 3520 
4D7E 3530 PROCEDURE Pu(v:INTEGER);
4D81 3540 BEGIN
4D96 3550  st[sp]:=v;
4DBB 3560  sp:=sp+1;
4DC2 3570 END;
4DC9 3580 
4DC9 3590 FUNCTION Po: INTEGER;
4DCC 3600 BEGIN
4DE1 3610  sp:=sp-1;
4DE8 3620  Po:=st[sp];
4E0B 3630 END;
4E11 3640 
4E11 3650 PROCEDURE So3(i1,i2,i3:INTEGER);
4E14 3660 BEGIN
4E29 3670  IF Ga(i1,i2) THEN
4E47 3680   Tausche(i1,i2);
4E5E 3690  IF Ga(i1,i3) THEN
4E7C 3700   Tausche(i1,i3);
4E93 3710  IF Ga(i2,i3) THEN
4EB1 3720   Tausche(i2,i3);
4EC8 3730 END;
4ED2 3740 
4ED2 3750 
4ED2 3760  PROCEDURE LZeiS(x1,x2,yy:INTEGER);
4ED5 3770  BEGIN
4EEA 3780   SETC(1,0);
4EFB 3790   IF sk1 THEN
4F02 3800    LINEPLOT(x1+xOfs,yy,x2+xOfs,yy)
4F34 3810   ELSE IF sk2 THEN
4F4F 3820    LINEPLOT(x1+x1+xOfs-1,yy,x2+x2+xOfs,yy)
4F9E 3830   ELSE
4FB2 3840    LINEPLOT(SHL(x1+xOfs,3),SHL(yy-1,3),SHL(x2+xOfs,3)-1,SHL(yy-1,3));
5038 3850  END;
5042 3860 
5042 3870 BEGIN
5057 3880  l:=1;r:=agr;SIn;w1:=TRUE;
5073 3890  a[0]:=0;
5095 3900  WHILE w AND w1 DO BEGIN
50A2 3910   WHILE (r-l>m) AND w DO BEGIN
50CC 3920    IF r-l>n THEN BEGIN
50F0 3930     v:=SHR(r+l,1);i:=l;j:=r-1;
512D 3940     So3(l,v,r); Tausche(v,r-1);
515F 3950     v:=r-1; END
516C 3960    ELSE BEGIN
516F 3970     v:=r;i:=l-1;j:=r; END;
518E 3980    t:=a[v];tt:=SHL(t,pSk)+yOfs;
51DB 3990    SETC(1,0);
51EC 4000    LZeiS(l,r,t);
5206 4010    w2:=TRUE;
520B 4020    WHILE w AND w2 DO BEGIN
5218 4030     REPEAT i:=i+1;
521F 4040     UNTIL NOT Ga(v,i) OR NOT w;
5244 4050     REPEAT j:=j-1;
524B 4060     UNTIL NOT Ga(j,v) OR NOT w;
5270 4070     IF i>=j THEN w2:=FALSE
5282 4080             ELSE Tausche(i,j);
5298 4090    END;
529B 4100    SETC(7,0);
52AC 4110    FOR u:=l TO r DO
52D9 4120     IF a[u]=t THEN BEGIN
530B 4130      SETC(7,7);PSetS(u,t);
5333 4140      SETC(7,0);
5344 4150     END
5344 4160     ELSE
5347 4170      PLoeS(u,t);
5362 4180    Tausche(i,v);
5376 4190 
5376 4200    IF i-l>r-i THEN BEGIN
53A3 4210     Pu(l);Pu(i-1);l:=i+1; END
53C3 4220    ELSE BEGIN
53C6 4230     Pu(i+1);Pu(r);r:=i-1; END
53E6 4240   END;
53E9 4250   IF sp=0 THEN w1:=FALSE
53FD 4260   ELSE BEGIN r:=Po;l:=Po; END;
541C 4270  END;
541F 4280 END;
542E 4290 
542E 4300 PROCEDURE Insertion;
5431 4310 BEGIN
5446 4320  i:=2; a[0]:=0;
546E 4330  WHILE (i<=agr) AND w DO
5483 4340  BEGIN
5483 4350   InTmp(i); j:=i;
5496 4360   WHILE Ga(j-1,iTmp) AND w DO
54B5 4370   BEGIN
54B5 4380    Schiebe1(j,j-1); j:=j-1;
54CE 4390   END;
54D1 4400   IF w THEN
54D8 4410    AusTmp(j);
54E5 4420   i:=i+1;
54EC 4430  END;
54EF 4440 END;
54F5 4450 
54F5 4460 PROCEDURE Selection;
54F8 4470 VAR min:INTEGER;
54F8 4480 BEGIN
550D 4490  i:=1;
5513 4500  WHILE (i<=agr) AND w DO
5528 4510  BEGIN
5528 4520   min:=i;j:=i+1;
5538 4530   WHILE (j<=agr) AND w DO
554D 4540   BEGIN
554D 4550    IF Ga(min,j) THEN
5568 4560     min:=j;
5571 4570    j:=j+1;
5578 4580   END;
557B 4590   IF (min<>i) AND w THEN
5596 4600    Tausche(min,i);
55AA 4610   i:=i+1;
55B1 4620  END;
55B4 4630 END;
55BB 4640 
55BB 4650 PROCEDURE Bubble;
55BE 4660 BEGIN
55D3 4670  i:=agr;
55D9 4680  WHILE (i>=1) AND w DO
55EF 4690  BEGIN
55EF 4700   j:=2;
55F5 4710   WHILE (j<=i) AND w DO
560A 4720   BEGIN
560A 4730    IF Ga(j-1,j) THEN
5623 4740     Tausche(j-1,j);
5635 4750    j:=j+1;
563C 4760   END;
563F 4770   i:=i-1;
5646 4780  END;
5649 4790 END;
564F 4800 
564F 4810 PROCEDURE Shell;
5652 4820 VAR s:INTEGER;
5652 4830  ok:BOOLEAN;
5652 4840 BEGIN
5667 4850  s:=1;
5670 4860  WHILE s<=agr DIV 9 DO
568A 4870   s:=s+s+s+1;
56B6 4880  WHILE (s>0) AND w DO
56CE 4890  BEGIN
56CE 4900   GotoZInf; WRITE(s);
56E3 4910   i:=s+1;
56ED 4920   WHILE (i<=agr) AND w DO
5702 4930   BEGIN
5702 4940    InTmp(i); j:=i;
5715 4950    ok:=TRUE;
571A 4960    WHILE (j>s) AND ok AND w DO
5738 4970     IF Ga(j-s,iTmp) THEN
575F 4980     BEGIN
575F 4990      Schiebe1(j,j-s); j:=j-s;
5794 5000     END
5794 5010     ELSE
5797 5020      ok:=FALSE;
579E 5030    AusTmp(j);
57AB 5040    i:=i+1;
57B2 5050   END;
57B5 5060   s:=s DIV 3;
57C9 5070  END;
57CC 5080 END;
57D4 5090 
57D4 5100 PROCEDURE Heapsort;
57D7 5110 VAR
57D7 5120  k,t,nn:INTEGER;
57D7 5130 
57D7 5140  PROCEDURE Downheap(k:INTEGER);
57DA 5150  VAR
57DA 5160   j,nn2:INTEGER;
57DA 5170   lp:BOOLEAN;
57DA 5180  BEGIN
57EF 5190   InTmp(k);
57FF 5200   nn2:=nn DIV 2; lp:=TRUE;
581F 5210   WHILE (k<=nn2) AND w AND lp DO
5840 5220   BEGIN
5840 5230    j:=k+k;
585A 5240    IF j<nn THEN
5877 5250     IF Ga(j+1,j) THEN j:=j+1;
58A3 5260    IF Ga(iTmp,j) THEN lp:=FALSE
58C0 5270    ELSE
58C5 5280    BEGIN
58C5 5290     Schiebe1(k,j); k:=j
58DC 5300    END;
58E8 5310   END;
58EB 5320   AusTmp(k);
58FB 5330  END;
5905 5340 
5905 5350 BEGIN
591A 5360  nn:=agr; k:=nn DIV 2;
5937 5370  GotoZInf; WRITE('Aufbau');
5951 5380  WHILE (k>=1) AND w DO
596A 5390  BEGIN
596A 5400   Downheap(k); k:=k-1;
5983 5410  END;
5986 5420  GotoZInf; WRITE('Sortie.');
59A1 5430  WHILE (nn>1) AND w DO
59B9 5440  BEGIN
59B9 5450   Tausche(1,nn);
59CD 5460   nn:=nn-1;
59DA 5470   Downheap(1);
59E3 5480  END;
59E6 5490 END;
59F1 5500 
59F1 5510 PROCEDURE Sortiere;
59F4 5520 CONST L='<E:2.1>';
59FE 5530 VAR c:CHAR;
59FE 5540 BEGIN
5A13 5550  CASE algo OF
5A16 5560   SEL: Selection;
5A27 5570   INS: Insertion;
5A38 5580   BUB: Bubble;
5A49 5590   SHE: Shell;
5A5A 5600   QUI: Quick(0,agr);
5A73 5610   QUM: Quick(0,3);
5A8C 5620   QMI: BEGIN
5A91 5630         Quick(5,3);Insertion
5AA2 5640        END;
5AAE 5650   HEA: Heapsort
5AB3 5660  ELSE
5ABF 5670   BEGIN
5ABF 5680    SETC(7,1); GOTOXY(3,10);
5AE1 5690    WRITE('...nicht implementiert...');
5B05 5700   END;
5B05 5710  (*LoescheMrk;->3 Zl.*)
5B05 5720  SETC(7,6);
5B16 5730  PLoeS(altI1,altDY);
5B27 5740  PLoeS(altI2,altDY);
5B38 5750  StartKnopf('Fertig');
5B5B 5760  Tasten('*     ');
5B7E 5770  c:=READKBD;
5B84 5780  StartKnopf(' Los! ');
5BA7 5790  Tasten('Qnklij');
5BCA 5800 END;
5BD1 5810 
5BD1 5820 BEGIN
5BDA 5830 (*<T
5BDA 5840  aSta:=ZUFALL; algo:=INS; agr:=10;
5BDA 5850  xOfs:=0;yOfs:=YOFS;iTmp:=agr+3;
5BDA 5860  tSym:=' ';
5BDA 5870  w:=TRUE;schritt:=TRUE;
5BDA 5880  zuw:=0; vgl:=0;
5BDA 5890  SETC(7,0);PAGE;
5BDA 5900  prx:=32;pry:=5;
5BDA 5910  FOR i:=1 TO agr DO
5BDA 5920   a[i]:=i+yOfs-1;
5BDA 5930 (+
5BDA 5940  FOR i:=agr DOWNTO 2 DO
5BDA 5950  BEGIN
5BDA 5960   j:=HI(i*(RANDOM+1))+1;
5BDA 5970   altI1:=a[i];a[i]:=a[j];a[j]:=altI1;
5BDA 5980  END;
5BDA 5990 +)
5BDA 6000  FOR i:=1 TO agr DO
5BDA 6010   a[i]:=BAND(a[i],#FFFE);
5BDA 6020 
5BDA 6030  FOR i:=1 TO agr DO
5BDA 6040   PLOT(i+xOfs,a[i]);
5BDA 6050  Sortiere;
5BDA 6060 T>*)
5BDA 6070 END.
Endadresse: 5BDC
Ok
